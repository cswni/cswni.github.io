{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Desarrollo de app para registro de asistencia estudiantil Equipo de estudiantes de la Universidad Martin Lutero en Ocotal, Nueva Segovia que desarrollan esta aplicaci\u00f3n (web, m\u00f3vil, API). Instructor Datos de contacto Carlos Andr\u00e9s P\u00e9rez. 8 1 3 2 3 0 0 0 prof.cperezu@uml.edu.ni Equipo de estudiantes II y III a\u00f1o de Ingenier\u00eda en Sistemas Juan Magdiel Oscar Rosales Jorge Gaitan Luis Benavidez Marvin Vallejo Colaborador Ingeniero en sistemas Adri\u00e1n Calderon. 8 1 3 2 3 0 0 0 amarusadrian@gmail.com Detalles Detalles de los procesos que se prentenden cubrir Registro de estudiantes, profesores y personal de administraci\u00f3n Registro del horario trimestral Registro de las asignaturas por carrera Registro de las carreras Registro de los grupos por carrera y a\u00f1o lectivo Registro de la asistencia por parte de los profesores Generaci\u00f3n de reportes(Diario, Mensual y Trimestral) Periodo programado Desde el 12 de octubre de 2019 al 12 de febrero de 2020","title":"Inicio"},{"location":"#desarrollo-de-app-para-registro-de-asistencia-estudiantil","text":"Equipo de estudiantes de la Universidad Martin Lutero en Ocotal, Nueva Segovia que desarrollan esta aplicaci\u00f3n (web, m\u00f3vil, API).","title":"Desarrollo de app para registro de asistencia estudiantil"},{"location":"#instructor","text":"Datos de contacto Carlos Andr\u00e9s P\u00e9rez. 8 1 3 2 3 0 0 0 prof.cperezu@uml.edu.ni","title":"Instructor"},{"location":"#equipo-de-estudiantes","text":"II y III a\u00f1o de Ingenier\u00eda en Sistemas Juan Magdiel Oscar Rosales Jorge Gaitan Luis Benavidez Marvin Vallejo","title":"Equipo de estudiantes"},{"location":"#colaborador","text":"Ingeniero en sistemas Adri\u00e1n Calderon. 8 1 3 2 3 0 0 0 amarusadrian@gmail.com","title":"Colaborador"},{"location":"#detalles","text":"Detalles de los procesos que se prentenden cubrir Registro de estudiantes, profesores y personal de administraci\u00f3n Registro del horario trimestral Registro de las asignaturas por carrera Registro de las carreras Registro de los grupos por carrera y a\u00f1o lectivo Registro de la asistencia por parte de los profesores Generaci\u00f3n de reportes(Diario, Mensual y Trimestral) Periodo programado Desde el 12 de octubre de 2019 al 12 de febrero de 2020","title":"Detalles"},{"location":"apps-1/","text":"Software necesario para el desarrollo (inicial) Descarga y configuraci\u00f3n de: Programas Cada uno de los programas puede presentar diversas situaciones. Favor documentarse sobre ello: Trabajaremos sobre Windows (recomendado el 10) Vagrant Git (gitscm) VirtualBox FileZilla Putty o Termius Navegador web (chrome u otro) Visual Studio Code IDE: PHPStorm IDE: WebStorm PHP 7 Composer Carpeta de trabajo Crear una carpeta en su computadora en la ubicaci\u00f3n que desean Establecer el nombre: app-uml-asistencia Procesos Instalaci\u00f3n de la box laravel/homestead , abrir una consola de Git o WIndows en la carpeta app-uml-asistencia Escribir: vagrant init laravel/homestead Enter Esto demora un cierto tiempo ya que descarga la primera vez desde internet. Solo la primera vez se ejecuta este comando. Despu\u00e9s usaremos el comando siguiente para iniciar la m\u00e1quina virtual. vagrant up Enter para arrancar la m\u00e1quina virtual vagrant ssh Enter para acceder al sistema operativo virtual desde windows Credenciales Usuario: vagrant Enter Clave: vagrant Enter Una vez dentro de la m\u00e1quina tenemos este mensaje en la consola. Esto nos indica que estamos listos para instalar los demas componentes. Enlace \u00fatil para adquirir algunos servicios gratuitos Paquete de estudiante en GitHub","title":"En desarrollo"},{"location":"apps-1/#software-necesario-para-el-desarrollo-inicial","text":"","title":"Software necesario para el desarrollo (inicial)"},{"location":"apps-1/#descarga-y-configuracion-de","text":"Programas Cada uno de los programas puede presentar diversas situaciones. Favor documentarse sobre ello: Trabajaremos sobre Windows (recomendado el 10) Vagrant Git (gitscm) VirtualBox FileZilla Putty o Termius Navegador web (chrome u otro) Visual Studio Code IDE: PHPStorm IDE: WebStorm PHP 7 Composer","title":"Descarga y configuraci\u00f3n de:"},{"location":"apps-1/#carpeta-de-trabajo","text":"","title":"Carpeta de trabajo"},{"location":"apps-1/#crear-una-carpeta-en-su-computadora-en-la-ubicacion-que-desean","text":"Establecer el nombre: app-uml-asistencia","title":"Crear una carpeta en su computadora en la ubicaci\u00f3n que desean"},{"location":"apps-1/#procesos","text":"Instalaci\u00f3n de la box laravel/homestead , abrir una consola de Git o WIndows en la carpeta app-uml-asistencia Escribir: vagrant init laravel/homestead Enter Esto demora un cierto tiempo ya que descarga la primera vez desde internet. Solo la primera vez se ejecuta este comando. Despu\u00e9s usaremos el comando siguiente para iniciar la m\u00e1quina virtual. vagrant up Enter para arrancar la m\u00e1quina virtual vagrant ssh Enter para acceder al sistema operativo virtual desde windows Credenciales Usuario: vagrant Enter Clave: vagrant Enter Una vez dentro de la m\u00e1quina tenemos este mensaje en la consola. Esto nos indica que estamos listos para instalar los demas componentes.","title":"Procesos"},{"location":"apps-1/#enlace-util-para-adquirir-algunos-servicios-gratuitos","text":"Paquete de estudiante en GitHub","title":"Enlace \u00fatil para adquirir algunos servicios gratuitos"},{"location":"lec-1/","text":"Instalaci\u00f3n de Laravel y activaci\u00f3n de homestead Instalar Laravel en la carpeta app-uml-asistencia Laravel es un framework para desarrollo con PHP que permite escribir c\u00f3digo sencillo e incluye diversas herramientas para el enrutamiento, bases de datos, login y funciones de correo electr\u00f3nico. Abrir la consola en la carpeta app-uml-asistencia y escribir composer create-project laravel/laravel --prefer-dist . Enter No olvidar agregar el punto al final para que se cree la instalaci\u00f3n dentro de la carpeta adecuada Instalar el componente de homestead para Laravel Laravel / homestead es una libreria para laravel que ajusta varios campos de configuraci\u00f3n que nos permite arrancar con mayor rapidez nuestro desplieque de la m\u00e1quina virtual Antes de correr este comando borrar manualmente el archivo Vagranfile En la misma carpeta abrir una consola y correr composer require laravel/homestead --dev Enter Luego activar homestead vendor\\\\bin\\\\homestead make Enter","title":"1.1 - Laravel y activaci\u00f3n de homestead"},{"location":"lec-1/#instalacion-de-laravel-y-activacion-de-homestead","text":"","title":"Instalaci\u00f3n de Laravel y activaci\u00f3n de homestead"},{"location":"lec-1/#instalar-laravel-en-la-carpeta-app-uml-asistencia","text":"Laravel es un framework para desarrollo con PHP que permite escribir c\u00f3digo sencillo e incluye diversas herramientas para el enrutamiento, bases de datos, login y funciones de correo electr\u00f3nico. Abrir la consola en la carpeta app-uml-asistencia y escribir composer create-project laravel/laravel --prefer-dist . Enter No olvidar agregar el punto al final para que se cree la instalaci\u00f3n dentro de la carpeta adecuada","title":"Instalar Laravel en la carpeta app-uml-asistencia"},{"location":"lec-1/#instalar-el-componente-de-homestead-para-laravel","text":"Laravel / homestead es una libreria para laravel que ajusta varios campos de configuraci\u00f3n que nos permite arrancar con mayor rapidez nuestro desplieque de la m\u00e1quina virtual Antes de correr este comando borrar manualmente el archivo Vagranfile En la misma carpeta abrir una consola y correr composer require laravel/homestead --dev Enter Luego activar homestead vendor\\\\bin\\\\homestead make Enter","title":"Instalar el componente de homestead para Laravel"},{"location":"lec-2/","text":"Configurar el virtualhost para la app Crear un servidor virtual para el dominio umlasistencia.app Cuando ejecutamos el ultimo comando vendor\\\\bin\\\\homestead make Enter en la secci\u00f3n anterior se crean dos archivos que se llaman Homestead.yaml y Vagranfile. En el archivo Homestead.yaml cambiar el nombre del servidor y el la ruta de las carpetas. Debe quedar de esta manera(Solo cambiar lo que se explica en el video) Solo cambiar lo que les explico en el video. En mi caso tengo varios sistemas y por tanto la configuraci\u00f3n puede cambiar. Crear el servidor virtual en el fichero hosts de Windows Abrir la ruta que se muestra en la imagen Abrir la ventana de ejecutar en Windows Win + R Escribir %windir%\\system32\\drivers\\host Enter Abrir el archivo hosts Abrir este archivo usando Notepad++, dando clic derecho sobre ese fichero Agregar la direccion ip y el nombre de dominio al final del archivo y guardar. 192.168.10.10 umlasistencia.curso Encender el servidor y probar en el navegador Para encender Laravel desde el servidor escribimos en la consola dentro del servidor y dentro de la carpeta app-uml-asistencia php artisan serve Ahora en el navegador web que usemos podemos anotar la url umlasistencia.curso y nos muestra la pagina principal de Laravel Videos de apoyo en YouTube","title":"1.2 - Configurar virtual host"},{"location":"lec-2/#configurar-el-virtualhost-para-la-app","text":"","title":"Configurar el virtualhost para la app"},{"location":"lec-2/#crear-un-servidor-virtual-para-el-dominio-umlasistenciaapp","text":"Cuando ejecutamos el ultimo comando vendor\\\\bin\\\\homestead make Enter en la secci\u00f3n anterior se crean dos archivos que se llaman Homestead.yaml y Vagranfile. En el archivo Homestead.yaml cambiar el nombre del servidor y el la ruta de las carpetas. Debe quedar de esta manera(Solo cambiar lo que se explica en el video) Solo cambiar lo que les explico en el video. En mi caso tengo varios sistemas y por tanto la configuraci\u00f3n puede cambiar.","title":"Crear un servidor virtual para el dominio umlasistencia.app"},{"location":"lec-2/#crear-el-servidor-virtual-en-el-fichero-hosts-de-windows","text":"Abrir la ruta que se muestra en la imagen Abrir la ventana de ejecutar en Windows Win + R Escribir %windir%\\system32\\drivers\\host Enter Abrir el archivo hosts Abrir este archivo usando Notepad++, dando clic derecho sobre ese fichero Agregar la direccion ip y el nombre de dominio al final del archivo y guardar. 192.168.10.10 umlasistencia.curso","title":"Crear el servidor virtual en el fichero hosts de Windows"},{"location":"lec-2/#encender-el-servidor-y-probar-en-el-navegador","text":"Para encender Laravel desde el servidor escribimos en la consola dentro del servidor y dentro de la carpeta app-uml-asistencia php artisan serve Ahora en el navegador web que usemos podemos anotar la url umlasistencia.curso y nos muestra la pagina principal de Laravel","title":"Encender el servidor y probar en el navegador"},{"location":"lec-2/#videos-de-apoyo-en-youtube","text":"","title":"Videos de apoyo en YouTube"},{"location":"lec-3/","text":"Inicializar el repositorio Git en la m\u00e1quina de trabajo Operaciones necesarias 1.3 Incializar git Dar clic derecho dentro de la carpeta del proyecto Elegir Git bash here Escribir git init Enter Esto crea una carpeta oculta llamada .git que almacena todo los cambios en el codigo. 1.3.1 Agregar los ficheros Siempre dentro de la consola Escribir git add * Enter Esto agrega todo los ficheros a los que vamos a dar seguimiento. En la carpeta existe un archivo llamado .gitignore que tiene guardado los archivos y carpetas que no se les da seguimiento. Estos archivos no se agregan al repositorio porque no se requiere llevar el control de versi\u00f3n de ellos. 1.3.2 Confirmar los cambios. Siempre dentro de la consola Escribir git commit -m \"Inicio del proyecto\" Enter Los commit son las confirmaciones de los cambios. El parametro -m permite agregar el mensaje para explicar en que consiste el cambio en el c\u00f3digo. 1.3 Crear el repositorio en GitHub 1.3.1 Crear el repositorio online Ingresar a GitHub y crear un nuevo repositorio Repository name: app-uml-asistencia Description: Sistema de asistencia Visibilidad: Private Y por \u00faltimo: Create repository 1.3.2 Agregar el repositorio remoto a la carpeta local Una vez creado en Github vamos a agregar la url del repositorio remoto a nuestro repositorio local para luego subir los archivos. Copiar la URL que se crea en Github git remote add origin https://github.com/username/app-uml-asistencia.git similar a este formato. Tomar la URL del repositorio tal como se muestra en la imagen. Pegar en la consola de Git y presionar Enter 1.3.3 Subir el proyecto Ahora vamos a subir el proyecto con el comando git push -u origin master Enter 1.3 Notas sobre Git La primera vez que se hace carga de ficheros a GitHub nos pide que se configure el usuario y el correo. En la consola podemos hacerlo de la manera siguiente. git config --global user.name \"Su nombre Su apellido\" Enter git config --global user.email \"correo@gmail.com\" Enter","title":"1.3 - Inicializar el repositorio"},{"location":"lec-3/#inicializar-el-repositorio-git-en-la-maquina-de-trabajo","text":"","title":"Inicializar el repositorio Git en la m\u00e1quina de trabajo"},{"location":"lec-3/#operaciones-necesarias","text":"","title":"Operaciones necesarias"},{"location":"lec-3/#13-incializar-git","text":"Dar clic derecho dentro de la carpeta del proyecto Elegir Git bash here Escribir git init Enter Esto crea una carpeta oculta llamada .git que almacena todo los cambios en el codigo.","title":"1.3  Incializar git"},{"location":"lec-3/#131-agregar-los-ficheros","text":"Siempre dentro de la consola Escribir git add * Enter Esto agrega todo los ficheros a los que vamos a dar seguimiento. En la carpeta existe un archivo llamado .gitignore que tiene guardado los archivos y carpetas que no se les da seguimiento. Estos archivos no se agregan al repositorio porque no se requiere llevar el control de versi\u00f3n de ellos.","title":"1.3.1   Agregar los ficheros"},{"location":"lec-3/#132-confirmar-los-cambios","text":"Siempre dentro de la consola Escribir git commit -m \"Inicio del proyecto\" Enter Los commit son las confirmaciones de los cambios. El parametro -m permite agregar el mensaje para explicar en que consiste el cambio en el c\u00f3digo.","title":"1.3.2   Confirmar los cambios."},{"location":"lec-3/#13-crear-el-repositorio-en-github","text":"","title":"1.3  Crear el repositorio en GitHub"},{"location":"lec-3/#131-crear-el-repositorio-online","text":"Ingresar a GitHub y crear un nuevo repositorio Repository name: app-uml-asistencia Description: Sistema de asistencia Visibilidad: Private Y por \u00faltimo: Create repository","title":"1.3.1   Crear el repositorio online"},{"location":"lec-3/#132-agregar-el-repositorio-remoto-a-la-carpeta-local","text":"Una vez creado en Github vamos a agregar la url del repositorio remoto a nuestro repositorio local para luego subir los archivos. Copiar la URL que se crea en Github git remote add origin https://github.com/username/app-uml-asistencia.git similar a este formato. Tomar la URL del repositorio tal como se muestra en la imagen. Pegar en la consola de Git y presionar Enter","title":"1.3.2   Agregar el repositorio remoto a la carpeta local"},{"location":"lec-3/#133-subir-el-proyecto","text":"Ahora vamos a subir el proyecto con el comando git push -u origin master Enter","title":"1.3.3   Subir el proyecto"},{"location":"lec-3/#13-notas-sobre-git","text":"La primera vez que se hace carga de ficheros a GitHub nos pide que se configure el usuario y el correo. En la consola podemos hacerlo de la manera siguiente. git config --global user.name \"Su nombre Su apellido\" Enter git config --global user.email \"correo@gmail.com\" Enter","title":"1.3  Notas sobre Git"}]}