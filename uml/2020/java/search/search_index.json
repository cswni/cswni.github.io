{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Orientaciones sobre la materia de Programaci\u00f3n orientada a objetos Dirigida a I a\u00f1o de Ingenier\u00eda en Sistemas en la Universidad Martin Lutero en Ocotal, Nueva Segovia. Instructor Datos de contacto Carlos Andr\u00e9s P\u00e9rez. 8 5 3 7 1 1 4 6 prof.cperezu@uml.edu.ni Informaci\u00f3n general Este instructivo es para cubrir los siguientes aspectos Orientar el 30% del trabajo para que sea completado por cada estudiante Presentar los pasos a seguir para mantener control de nuestro c\u00f3digo Presentar informaci\u00f3n sobre las tareas a cumplir Paso a paso en el desarrollo de programas b\u00e1sicos con Java Compartir las herramientas que se requieren para el desarrollo de los ejercicios Periodo programado para la clase Desde el 23 de noviembre de 2019 al 15 de febrero de 2020","title":"Inicio"},{"location":"#orientaciones-sobre-la-materia-de-programacion-orientada-a-objetos","text":"Dirigida a I a\u00f1o de Ingenier\u00eda en Sistemas en la Universidad Martin Lutero en Ocotal, Nueva Segovia.","title":"Orientaciones sobre la materia de Programaci\u00f3n orientada a objetos"},{"location":"#instructor","text":"Datos de contacto Carlos Andr\u00e9s P\u00e9rez. 8 5 3 7 1 1 4 6 prof.cperezu@uml.edu.ni","title":"Instructor"},{"location":"#informacion-general","text":"Este instructivo es para cubrir los siguientes aspectos Orientar el 30% del trabajo para que sea completado por cada estudiante Presentar los pasos a seguir para mantener control de nuestro c\u00f3digo Presentar informaci\u00f3n sobre las tareas a cumplir Paso a paso en el desarrollo de programas b\u00e1sicos con Java Compartir las herramientas que se requieren para el desarrollo de los ejercicios Periodo programado para la clase Desde el 23 de noviembre de 2019 al 15 de febrero de 2020","title":"Informaci\u00f3n general"},{"location":"apps-1/","text":"Software necesario para el desarrollo Descarga y configuraci\u00f3n de: Programas Cada uno de los programas puede presentar diversas situaciones. Favor documentarse sobre ello: Trabajaremos sobre Windows (Verificar la arquitectura (i386(32bits) o amd64(64bits)) Git (gitscm) Navegador web (Chrome u otro) IDE: IntellijIDEA JDK de Java Procesos a completar Instalaci\u00f3n de cada programa descrito en la lista anterior Enlaces para el software requerido Git Intellij IDEA JDK Chrome","title":"Software a instalar"},{"location":"apps-1/#software-necesario-para-el-desarrollo","text":"","title":"Software necesario para el desarrollo"},{"location":"apps-1/#descarga-y-configuracion-de","text":"Programas Cada uno de los programas puede presentar diversas situaciones. Favor documentarse sobre ello: Trabajaremos sobre Windows (Verificar la arquitectura (i386(32bits) o amd64(64bits)) Git (gitscm) Navegador web (Chrome u otro) IDE: IntellijIDEA JDK de Java","title":"Descarga y configuraci\u00f3n de:"},{"location":"apps-1/#procesos-a-completar","text":"Instalaci\u00f3n de cada programa descrito en la lista anterior","title":"Procesos a completar"},{"location":"apps-1/#enlaces-para-el-software-requerido","text":"Git Intellij IDEA JDK Chrome","title":"Enlaces para el software requerido"},{"location":"config/","text":"Ajustes en m\u00e1quina local para trabajo con Git Git es una aplicaci\u00f3n que esta disponible para sistemas operativos Windows y Linux. El comando principal es git . Abrir la consola en el proyecto Para abrir una consola para trabajar con git debemos dar clic derecho sobre la carpeta que almacena nuestros proyectos y elegir Git Bash here La consola que se abre nos muestra el nombre de usuario que esta actualmente utilizando la computadora y la ruta de la carpeta que hemos elegido. Verificar si todo esta en orden mostrando la versi\u00f3n de Git con el comando git --version Enter La salida del comando nos muestra git version 2.21.1.windows.2. La versi\u00f3n que se tenga instalada en sus equipos probablemente sea diferente. Eso no afecta los pasos que vamos a seguir. Definir ajustes globales de cada usuario Usar el mismo correo con el que han creado la cuenta en GitHub. Este paso solo se hace la primera vez que se instala Git en la PC Git necesita saber el nombre y el correo de la persona que estar\u00e1 haciendo los cambios y para ello se requiere que escribamos los siguientes comandos. En la misma consola escribir git config --global user.name \"Carlos Perez\" Enter Reemplazar Carlos Perez por su nombre. git config --global user.email \"prof.cperezu@uml.edu.ni\" Enter Reemplazar prof.cperezu@uml.edu.ni por su correo educativo. Generar una llave de seguridad para comunicarse con GitHub Este paso se debe la primera vez que utilizamos Git en nuestra computadora. No es necesario repetirlo a cada momento. Abrir una consola git en cualquier carpeta de nuestro ordenador y escribir ssh-keygen Enter En consola presionamos Enter En cada una de las preguntas que nos hace y al final tendremos una salida como la imagen siguiente. Con el paso anterior hemos generado una llave que nos permite la comunicaci\u00f3n directa con nuestros repositorios en linea. Ahora vamos a guardar esta llave en nuestra cuenta en Github. En la misma consola escribir cat ~/.ssh/id_rsa.pub | clip Enter No veremos nada en la consola despues de presionar Enter sin embargo hemos copiado la llave al portapapeles del equipo y ahora vamos a registrarla en nuestra cuenta online. Abrir sesi\u00f3n en nuestra cuenta Github y navegar hasta el enlace siguiente Abrir en Github Anotar el nombre de la llave en el campo (1) Title ingresando Llave y en cuadro (2) Key pegamos con Ctrl + V quedando de esta manera. Ahora damos clic en Add SSH Key (3) Ahora ya podemos inicializar nuestros proyectos en nuestra m\u00e1quina y subirlo a Github para compartirlo. IMPORTANTE: Todos estos pasos solo se hacen la primera vez que se instala Git.","title":"Git"},{"location":"config/#ajustes-en-maquina-local-para-trabajo-con-git","text":"Git es una aplicaci\u00f3n que esta disponible para sistemas operativos Windows y Linux. El comando principal es git .","title":"Ajustes en m\u00e1quina local para trabajo con Git"},{"location":"config/#abrir-la-consola-en-el-proyecto","text":"Para abrir una consola para trabajar con git debemos dar clic derecho sobre la carpeta que almacena nuestros proyectos y elegir Git Bash here La consola que se abre nos muestra el nombre de usuario que esta actualmente utilizando la computadora y la ruta de la carpeta que hemos elegido. Verificar si todo esta en orden mostrando la versi\u00f3n de Git con el comando git --version Enter La salida del comando nos muestra git version 2.21.1.windows.2. La versi\u00f3n que se tenga instalada en sus equipos probablemente sea diferente. Eso no afecta los pasos que vamos a seguir.","title":"Abrir la consola en el proyecto"},{"location":"config/#definir-ajustes-globales-de-cada-usuario","text":"Usar el mismo correo con el que han creado la cuenta en GitHub. Este paso solo se hace la primera vez que se instala Git en la PC Git necesita saber el nombre y el correo de la persona que estar\u00e1 haciendo los cambios y para ello se requiere que escribamos los siguientes comandos. En la misma consola escribir git config --global user.name \"Carlos Perez\" Enter Reemplazar Carlos Perez por su nombre. git config --global user.email \"prof.cperezu@uml.edu.ni\" Enter Reemplazar prof.cperezu@uml.edu.ni por su correo educativo.","title":"Definir ajustes globales de cada usuario"},{"location":"config/#generar-una-llave-de-seguridad-para-comunicarse-con-github","text":"Este paso se debe la primera vez que utilizamos Git en nuestra computadora. No es necesario repetirlo a cada momento. Abrir una consola git en cualquier carpeta de nuestro ordenador y escribir ssh-keygen Enter En consola presionamos Enter En cada una de las preguntas que nos hace y al final tendremos una salida como la imagen siguiente. Con el paso anterior hemos generado una llave que nos permite la comunicaci\u00f3n directa con nuestros repositorios en linea. Ahora vamos a guardar esta llave en nuestra cuenta en Github. En la misma consola escribir cat ~/.ssh/id_rsa.pub | clip Enter No veremos nada en la consola despues de presionar Enter sin embargo hemos copiado la llave al portapapeles del equipo y ahora vamos a registrarla en nuestra cuenta online. Abrir sesi\u00f3n en nuestra cuenta Github y navegar hasta el enlace siguiente Abrir en Github Anotar el nombre de la llave en el campo (1) Title ingresando Llave y en cuadro (2) Key pegamos con Ctrl + V quedando de esta manera. Ahora damos clic en Add SSH Key (3) Ahora ya podemos inicializar nuestros proyectos en nuestra m\u00e1quina y subirlo a Github para compartirlo.","title":"Generar una llave de seguridad para comunicarse con GitHub"},{"location":"config/#importante-todos-estos-pasos-solo-se-hacen-la-primera-vez-que-se-instala-git","text":"","title":"IMPORTANTE: Todos estos pasos solo se hacen la primera vez que se instala Git."},{"location":"ejercicios/","text":"Ejercicios Main public class Main { public static void main ( String [] args ){ System . out . writeln ( \"Proximamente mas ejercicios\" ) } } Persona public class Persona { private nombre = \"Carlos\" ; }","title":"Estructuras"},{"location":"ejercicios/#ejercicios","text":"Main public class Main { public static void main ( String [] args ){ System . out . writeln ( \"Proximamente mas ejercicios\" ) } } Persona public class Persona { private nombre = \"Carlos\" ; }","title":"Ejercicios"},{"location":"github/","text":"Crear repositorios en Github GitHub es una forja para alojar proyectos utilizando el sistema de control de versiones Git. Se utiliza principalmente para la creaci\u00f3n de c\u00f3digo fuente de programas de ordenador. El software que opera GitHub fue escrito en Ruby on Rails. Desde enero de 2010, GitHub opera bajo el nombre de GitHub, Inc. Acceder a Github y crear nuevos repositorios Ingresar a la URL siguiente Github Crear un repositorio(proyecto nuevo) dando clic en el signo + de la parte superior derecha. Elegir New repository Establecer el nombre (3), escribir una descripci\u00f3n(4), elegir la visibilidad del proyecto(5) y Create repository (6) Cuando terminamos el proceso y se guarda tenemos el siguiente resultado Cambiar el tipo de URL dando clic en HTTPS(1) y Copiar la URL del repositorio dando clic en el icono que esta se\u00f1ado con la flecha (2). Esta direcci\u00f3n la vamos a necesitar en nuestro proyecto local","title":"Crear repositorios en Github"},{"location":"github/#crear-repositorios-en-github","text":"GitHub es una forja para alojar proyectos utilizando el sistema de control de versiones Git. Se utiliza principalmente para la creaci\u00f3n de c\u00f3digo fuente de programas de ordenador. El software que opera GitHub fue escrito en Ruby on Rails. Desde enero de 2010, GitHub opera bajo el nombre de GitHub, Inc.","title":"Crear repositorios en Github"},{"location":"github/#acceder-a-github-y-crear-nuevos-repositorios","text":"Ingresar a la URL siguiente Github Crear un repositorio(proyecto nuevo) dando clic en el signo + de la parte superior derecha. Elegir New repository Establecer el nombre (3), escribir una descripci\u00f3n(4), elegir la visibilidad del proyecto(5) y Create repository (6) Cuando terminamos el proceso y se guarda tenemos el siguiente resultado Cambiar el tipo de URL dando clic en HTTPS(1) y Copiar la URL del repositorio dando clic en el icono que esta se\u00f1ado con la flecha (2). Esta direcci\u00f3n la vamos a necesitar en nuestro proyecto local","title":"Acceder a Github y crear nuevos repositorios"},{"location":"local/","text":"Crear proyectos Git de manera local Abrir la consola en el proyecto Para abrir una consola para trabajar con git debemos dar clic derecho sobre la carpeta que almacena nuestros proyectos y elegir Git Bash here La consola que se abre nos muestra el nombre de usuario que esta actualmente utilizando la computadora y la ruta de la carpeta que hemos elegido. Iniciar el rastreo con Git Este proceso consiste en decirle a git que empiece a observar los cambios en nuestro c\u00f3digo. Se realiza una sola vez y se escribe git init Enter Este comando no muestra ninguna salida sin embargo ahora nuestro proyecto estar\u00e1 siendo observado. A\u00f1adir la URL del repositorio creado en Github Con este comando vamos a decirle a git que nuestros archivos del proyecto se alojaran en linea en el repostorio creado git remote add origin https://github.com/ubedaca/githubpasoapaso.git Enter Esta url https://github.com/ubedaca/githubpasoapaso.git se genera cuando nosotros creamos un repositorio en GitHub. Asi como lo hicimos en el paso anterior Agregar los archivos al repositorio Consiste en decirle a git que archivos se van a estar cambiando y que se requiere que se lleve un control de esos cambios. El comando se llama git add . Despu\u00e9s de add se agrega el nombre del archivo o carpeta que se desea agregar. Si desea registrar todo el proyecto se agrega un asterisco. El comando completo ser\u00eda git add * Enter . Cuando hemos agregado archivos a git con el comando anterior, estos ya estan listos para ser confirmados. Para ser confirmados en el repositorio se utiliza el comando git commit -m \"mensaje\" . La palabra mensaje se reemplaza por el texto que se desee escribir explicando los cambios realizados o la version de los archivos. Ejemplo completo Crear un proyecto en Intellij IDEA y guardarlo en el Escritorio de la computadora El nombre de la carpeta se recomienda sea el nombre del proyecto. En nuestro ejemplo la llamaremos githubpasoapaso Abrir la consola en la carpeta del proyecto Abrir Intellij IDEA Click en Create new project Click en Next Click en Next Escribir el nombre de la carpeta que almacena el projecto Elegir la ruta donde se guarda el proyecto. Buscar el Escritorio La carpeta del proyecto contiene la carpeta src Es el lugar que guarda los archivos del proyecto Anterior Siguiente Agregar nuestra primera clase Dentro del programa Intellij IDEA crear la clase Main Click derecho en la carpeta src Esribir el nombre Presionar Enter Anterior Siguiente Agregar el m\u00e9todo main a la clase Main El codigo de la clase Main es el siguiente Main public class Main { public static void main ( String [] args ){ /*Desde esta clase se llaman al resto de clases escritas en este proyecto*/ } } A\u00f1adir nuestro primer cambio a Git Si aun no ha inicializado el repositorio dentro de la consola abierta desde la carpeta del proyecto escribir git init Enter Luego vamos a ver el estado de nuestro proyecto git status Enter Podemos observar que hay archivos nuevos que no estan en nuestro repositorio. Salen marcados en rojo Ahora vamos a agregar la carpeta src a nuestro repositorio escribiendo git add src Enter Seguimos ahora con el punto mas importante. Confirmar el cambio con un commit git commit -m \"A\u00f1adiendo la carpeta del proyecto\" Enter y tenemos la siguiente salida Finalizamos subiendo los archivos actualizados a Github con git push origin master Enter y al finailzar comando tenemos una salida similar a esta. Ahora podemos ver en Github nuestro codigo completo.","title":"Crear repositorios local"},{"location":"local/#crear-proyectos-git-de-manera-local","text":"","title":"Crear proyectos Git de manera local"},{"location":"local/#abrir-la-consola-en-el-proyecto","text":"Para abrir una consola para trabajar con git debemos dar clic derecho sobre la carpeta que almacena nuestros proyectos y elegir Git Bash here La consola que se abre nos muestra el nombre de usuario que esta actualmente utilizando la computadora y la ruta de la carpeta que hemos elegido.","title":"Abrir la consola en el proyecto"},{"location":"local/#iniciar-el-rastreo-con-git","text":"Este proceso consiste en decirle a git que empiece a observar los cambios en nuestro c\u00f3digo. Se realiza una sola vez y se escribe git init Enter Este comando no muestra ninguna salida sin embargo ahora nuestro proyecto estar\u00e1 siendo observado.","title":"Iniciar el rastreo con Git"},{"location":"local/#anadir-la-url-del-repositorio-creado-en-github","text":"Con este comando vamos a decirle a git que nuestros archivos del proyecto se alojaran en linea en el repostorio creado git remote add origin https://github.com/ubedaca/githubpasoapaso.git Enter Esta url https://github.com/ubedaca/githubpasoapaso.git se genera cuando nosotros creamos un repositorio en GitHub. Asi como lo hicimos en el paso anterior","title":"A\u00f1adir la URL del repositorio creado en Github"},{"location":"local/#agregar-los-archivos-al-repositorio","text":"Consiste en decirle a git que archivos se van a estar cambiando y que se requiere que se lleve un control de esos cambios. El comando se llama git add . Despu\u00e9s de add se agrega el nombre del archivo o carpeta que se desea agregar. Si desea registrar todo el proyecto se agrega un asterisco. El comando completo ser\u00eda git add * Enter . Cuando hemos agregado archivos a git con el comando anterior, estos ya estan listos para ser confirmados. Para ser confirmados en el repositorio se utiliza el comando git commit -m \"mensaje\" . La palabra mensaje se reemplaza por el texto que se desee escribir explicando los cambios realizados o la version de los archivos.","title":"Agregar los archivos al repositorio"},{"location":"local/#ejemplo-completo","text":"Crear un proyecto en Intellij IDEA y guardarlo en el Escritorio de la computadora El nombre de la carpeta se recomienda sea el nombre del proyecto. En nuestro ejemplo la llamaremos githubpasoapaso","title":"Ejemplo completo"},{"location":"local/#agregar-nuestra-primera-clase","text":"Dentro del programa Intellij IDEA crear la clase Main","title":"Agregar nuestra primera clase"},{"location":"local/#agregar-el-metodo-main-a-la-clase-main","text":"El codigo de la clase Main es el siguiente Main public class Main { public static void main ( String [] args ){ /*Desde esta clase se llaman al resto de clases escritas en este proyecto*/ } }","title":"Agregar el m\u00e9todo main a la clase Main"},{"location":"local/#anadir-nuestro-primer-cambio-a-git","text":"Si aun no ha inicializado el repositorio dentro de la consola abierta desde la carpeta del proyecto escribir git init Enter Luego vamos a ver el estado de nuestro proyecto git status Enter Podemos observar que hay archivos nuevos que no estan en nuestro repositorio. Salen marcados en rojo Ahora vamos a agregar la carpeta src a nuestro repositorio escribiendo git add src Enter Seguimos ahora con el punto mas importante. Confirmar el cambio con un commit git commit -m \"A\u00f1adiendo la carpeta del proyecto\" Enter y tenemos la siguiente salida Finalizamos subiendo los archivos actualizados a Github con git push origin master Enter y al finailzar comando tenemos una salida similar a esta. Ahora podemos ver en Github nuestro codigo completo.","title":"A\u00f1adir nuestro primer cambio a Git"},{"location":"parcial1/","text":"Orientaci\u00f3n de los ex\u00e1menes Main public class Main { public static void main ( String [] args ){ System . out . writeln ( \"Parcial 1 - Finalizado\" ) } } Parcial2 public class Parcial2 { private detalle = \"En proceso ...\" ; }","title":"I Parcial"},{"location":"parcial1/#orientacion-de-los-examenes","text":"Main public class Main { public static void main ( String [] args ){ System . out . writeln ( \"Parcial 1 - Finalizado\" ) } } Parcial2 public class Parcial2 { private detalle = \"En proceso ...\" ; }","title":"Orientaci\u00f3n de los ex\u00e1menes"},{"location":"update/","text":"Actualizar los cambios en nuestro proyecto local y luego suir a GIthub Abrir la consola en el proyecto Verficar su hemos cambiado algo en el proyecto. git status Enter COmo he agregado la clase Persona ahora git detecta que el archivo src/Persona.java no esta siendo observado. Ahora lo a\u00f1adimos con git add * Enter Y confirmamos el cambio con git commit -m \"Agregando la clase Persona\" Enter Finalmente subimos el cambio a Github git push origin master Enter","title":"Actualizar cambios en el repositorio"},{"location":"update/#actualizar-los-cambios-en-nuestro-proyecto-local-y-luego-suir-a-github","text":"","title":"Actualizar los cambios en nuestro proyecto local y luego suir a GIthub"},{"location":"update/#abrir-la-consola-en-el-proyecto","text":"Verficar su hemos cambiado algo en el proyecto. git status Enter COmo he agregado la clase Persona ahora git detecta que el archivo src/Persona.java no esta siendo observado. Ahora lo a\u00f1adimos con git add * Enter Y confirmamos el cambio con git commit -m \"Agregando la clase Persona\" Enter Finalmente subimos el cambio a Github git push origin master Enter","title":"Abrir la consola en el proyecto"}]}